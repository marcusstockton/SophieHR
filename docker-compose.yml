version: "3.4"
services:
  sophiehr.ui:
    container_name: sophiehr.ui
    image: ${DOCKER_REGISTRY-}sophiehr_ui
    build:
      context: ../sophieHR-angular-material
      dockerfile: dockerfile
    ports:
      - 4200:80
    depends_on:
      - sophiehr.api


  sophiehr.api:
    container_name: sophiehr.api
    image: ${DOCKER_REGISTRY-}sophiehr_api
    build:
      context: .
      dockerfile: SophieHR.Api/Dockerfile
    environment:
      HERE_Maps_API_Key: ${HERE_Maps_API_Key}  # Read from .env file. Styled like: HERE_Maps_API_Key=1234
    ports:
      - 7189:443
      - 7189:80
    expose:
      - "443"
      - "80"
    depends_on:
      - db
      - elasticsearch
    networks:
      - docker-network


  db:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@55w0rd123
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - docker-network


  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - docker-network


  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      # - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - docker-network


  prometheus:
    image: quay.io/prometheus/prometheus:latest
    ports:
      - "9090:9090"
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    depends_on:
      - sophiehr.api
    networks:
      - docker-network


  grafana:
    image : grafana/grafana
    depends_on: 
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=AwkX512Xkcd
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local
  sqlserver_data:
  prometheus_data:
  grafana_data:

configs:
  prometheus_config:
    file: prometheus.yml