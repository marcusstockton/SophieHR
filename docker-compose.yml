version: '3.8'

services:
  # sophiehr.ui:
  #   container_name: sophiehr.ui
  #   image: ${DOCKER_REGISTRY-}sophiehr_ui
  #   build:
  #     context: ../sophieHR-angular-material
  #     dockerfile: dockerfile
  #   ports:
  #     - 4200:80
  #   depends_on:
  #     - sophiehr.api
  #   mem_limit: 256m
  #   mem_reservation: 128m
  #   memswap_limit: 256m
  #   cpus: "0.5"
  #   cpuset: "1"

  sophiehr.api:
    container_name: sophiehr.api
    image: ${DOCKER_REGISTRY-}sophiehr_api
    build:
      context: .
      dockerfile: SophieHR.Api/Dockerfile
    environment:
      HERE_Maps_API_Key: ${HERE_Maps_API_Key}
    ports:
      - 7189:443
      - 7189:80
    expose:
      - "443"
      - "80"
    mem_limit: 2g
    depends_on:
      db:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    networks:
      - docker-network

  db:
    container_name: sophiehr.db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_Password}
      - MSSQL_SA_PASSWORD=${SQL_Password}
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    mem_limit: 2g
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - docker-network

  redis_cache:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - docker-network
    mem_limit: 128m
    mem_reservation: 128m
    memswap_limit: 128m
    cpus: "0.5"
    cpuset: "1"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - node.name=es-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    networks:
      - docker-network
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    mem_limit: 4g

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.17.3
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    mem_limit: 2g
    environment:
        elasticsearch.hosts: 'http://elasticsearch:9200'
    networks:
      - docker-network

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    ports:
      - "9090:9090"
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    depends_on:
      - sophiehr.api
    networks:
      - docker-network
      - monitoring
    mem_limit: 256m
    mem_reservation: 128m
    memswap_limit: 256m
    cpus: "0.5"
    cpuset: "1"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    mem_limit: 256m
    mem_reservation: 128m
    memswap_limit: 256m
    cpus: "0.5"
    cpuset: "1"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=AwkX512Xkcd
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - docker-network
      - monitoring

networks:
  docker-network:
    driver: bridge
  monitoring:
    external: true

volumes:
  elasticsearch-data:
    driver: local
  sqlserver_data:
  prometheus_data:
  grafana_data:

configs:
  prometheus_config:
    file: prometheus.yml